/*! Simple Sakura Falling */
(function(){
  var d=document,b=d.body; if(!b) return;
  var c=d.createElement('canvas'); c.id='sakura-canvas'; c.style.cssText='position:fixed;top:0;left:0;pointer-events:none;z-index:10;'; b.appendChild(c);
  var w,h,ctx,pr=window.devicePixelRatio||1, petals=[];
  function resize(){ w=window.innerWidth; h=window.innerHeight; c.width=w*pr; c.height=h*pr; c.style.width=w+'px'; c.style.height=h+'px'; ctx=c.getContext('2d'); ctx.scale(pr,pr); }
  function Petal(){ this.reset(); }
  Petal.prototype.reset=function(){ this.x=Math.random()*w; this.y=-20; this.r=4+Math.random()*6; this.vx=-1+Math.random()*2; this.vy=1+Math.random()*2; this.rot=Math.random()*Math.PI; this.vr=(Math.random()-.5)*0.1; };
  Petal.prototype.update=function(){ this.x+=this.vx; this.y+=this.vy; this.rot+=this.vr; if(this.y>h+20) this.reset(); };
  Petal.prototype.draw=function(){ ctx.save(); ctx.translate(this.x,this.y); ctx.rotate(this.rot); ctx.fillStyle='rgba(244,114,182,.8)'; ctx.beginPath(); ctx.moveTo(0,0); ctx.quadraticCurveTo(-this.r, -this.r, 0, -2*this.r); ctx.quadraticCurveTo(this.r,-this.r, 0, 0); ctx.closePath(); ctx.fill(); ctx.restore(); };
  function init(n){ petals.length=0; for(var i=0;i<n;i++) petals.push(new Petal()); }
  function step(){ ctx.clearRect(0,0,w,h); for(var i=0;i<petals.length;i++){ petals[i].update(); petals[i].draw(); } requestAnimationFrame(step); }
  resize(); init(40); step();
  window.addEventListener('resize', function(){ resize(); init(40); });
})();