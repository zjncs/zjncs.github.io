/*! Simple Canvas Nest - lightweight */
(function(){
  var d=document,b=d.body; if(!b) return;
  var c=d.createElement('canvas'); c.id='canvas-nest'; c.style.cssText='position:fixed;top:0;left:0;z-index:-1;opacity:.7;'; b.appendChild(c);
  var w,h,ctx,pr=window.devicePixelRatio||1,points=[],NUM=99;
  function resize(){ w=window.innerWidth; h=window.innerHeight; c.width=w*pr; c.height=h*pr; c.style.width=w+'px'; c.style.height=h+'px'; ctx=c.getContext('2d'); ctx.scale(pr,pr); }
  function rand(n){ return Math.random()*n; }
  function reset(){ points=[]; for(var i=0;i<NUM;i++){ points.push({x:rand(w),y:rand(h),vx:rand(2)-1,vy:rand(2)-1}); } }
  function step(){
    ctx.clearRect(0,0,w,h);
    for(var i=0;i<points.length;i++){
      var p=points[i]; p.x+=p.vx; p.y+=p.vy;
      if(p.x<0||p.x>w) p.vx*=-1;
      if(p.y<0||p.y>h) p.vy*=-1;
      ctx.fillRect(p.x,p.y,1.2,1.2);
      for(var j=i+1;j<points.length;j++){
        var q=points[j],dx=p.x-q.x,dy=p.y-q.y,dist=dx*dx+dy*dy;
        if(dist<9000){
          ctx.globalAlpha = 1 - dist/9000;
          ctx.beginPath(); ctx.moveTo(p.x,p.y); ctx.lineTo(q.x,q.y); ctx.stroke();
          ctx.globalAlpha = 1;
        }
      }
    }
    requestAnimationFrame(step);
  }
  resize(); reset(); step();
  window.addEventListener('resize', function(){ resize(); reset(); });
})();